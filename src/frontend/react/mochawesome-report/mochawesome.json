{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-06T07:17:12.032Z",
    "end": "2022-07-06T07:17:18.724Z",
    "duration": 6692,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7cca96c8-0d5f-46df-a01e-788dbc096f28",
      "title": "",
      "fullFile": "F:\\Fractal\\BoilerPlateProject\\BoilerPlate\\src\\frontend\\react\\src\\testing\\AutomatedTests\\Selenium\\index.js",
      "file": "\\src\\testing\\AutomatedTests\\Selenium\\index.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0b1b0717-90f2-4cf6-bc74-8d1da8e16e25",
          "title": "adding tests for login",
          "fullFile": "F:\\Fractal\\BoilerPlateProject\\BoilerPlate\\src\\frontend\\react\\src\\testing\\AutomatedTests\\Selenium\\index.js",
          "file": "\\src\\testing\\AutomatedTests\\Selenium\\index.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"adding tests for login\"",
              "fullTitle": "adding tests for login \"before each\" hook in \"adding tests for login\"",
              "timedOut": false,
              "duration": 1435,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await LoginPage.launchBrowser(navigatingUrl);",
              "err": {},
              "uuid": "174c13fe-017b-433f-b24d-08253d69f83f",
              "parentUUID": "0b1b0717-90f2-4cf6-bc74-8d1da8e16e25",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"adding tests for login\"",
              "fullTitle": "adding tests for login \"after each\" hook in \"adding tests for login\"",
              "timedOut": false,
              "duration": 42,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await LoginPage.closeBrowser(); //closing the browser instance",
              "err": {},
              "uuid": "5ea667ec-54e8-4784-9651-f4ed607f089a",
              "parentUUID": "0b1b0717-90f2-4cf6-bc74-8d1da8e16e25",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "validation of username",
              "fullTitle": "adding tests for login validation of username",
              "timedOut": false,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await LoginPage.login(username, password); //logging in\nconst obtainedOutput = await LoginPage.getText(\"usernameErrorMsg\");\nawait assert.strictEqual(obtainedOutput, expectedOutput);",
              "err": {},
              "uuid": "2b15a076-a8d7-46e5-87ce-5d0fe19b932a",
              "parentUUID": "0b1b0717-90f2-4cf6-bc74-8d1da8e16e25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validation of username",
              "fullTitle": "adding tests for login validation of username",
              "timedOut": false,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await LoginPage.login(username, password); //logging in\nconst obtainedOutput = await LoginPage.getText(\"usernameErrorMsg\");\nawait assert.strictEqual(obtainedOutput, expectedOutput);",
              "err": {},
              "uuid": "3a5fba3c-bcaf-4ff6-b4c9-41e80881af93",
              "parentUUID": "0b1b0717-90f2-4cf6-bc74-8d1da8e16e25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validation of password",
              "fullTitle": "adding tests for login validation of password",
              "timedOut": false,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await LoginPage.login(username, password);\nconst obtainedOutput = await LoginPage.getText(\"passwordErrorMsg\");\nawait assert.strictEqual(obtainedOutput, expectedOutput);",
              "err": {},
              "uuid": "3b3ea764-0cf7-4518-8fc2-ec81159c35f9",
              "parentUUID": "0b1b0717-90f2-4cf6-bc74-8d1da8e16e25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validation of password",
              "fullTitle": "adding tests for login validation of password",
              "timedOut": false,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await LoginPage.login(username, password);\nconst obtainedOutput = await LoginPage.getText(\"passwordErrorMsg\");\nawait assert.strictEqual(obtainedOutput, expectedOutput);",
              "err": {},
              "uuid": "f76fcb42-21f4-4e48-9321-8084034dd2f7",
              "parentUUID": "0b1b0717-90f2-4cf6-bc74-8d1da8e16e25",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b15a076-a8d7-46e5-87ce-5d0fe19b932a",
            "3a5fba3c-bcaf-4ff6-b4c9-41e80881af93",
            "3b3ea764-0cf7-4518-8fc2-ec81159c35f9",
            "f76fcb42-21f4-4e48-9321-8084034dd2f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 500,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}